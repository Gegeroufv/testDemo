<?xml version="1.0" encoding="UTF-8"?>
<!--
scan：当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
scanPeriod：设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒当scan为true时，此属性生效。默认的时间间隔为1分钟。
debug：当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
-->
<configuration scan="false" scanPeriod="60 seconds" debug="false">
    <!-- 定义日志的根目录 -->
    <property name="LOG_HOME" value="/data/logback/order" />
    
    <!-- 定义日志文件名称 -->
    <property name="appName" value="etc-order"></property>
    
    <!-- 控制台 -->
    <appender name="Console" class="ch.qos.logback.core.ConsoleAppender">
    	<!-- 日志输出格式： -->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{50}:%L - %msg%n</pattern>
        </layout>
    </appender>

    <!-- 按天分的文件 -->  
    <appender name="RollingFile_Appender" class="ch.qos.logback.core.rolling.RollingFileAppender">
       
        <!-- 指定日志文件的名称 -->
        <file>${LOG_HOME}/${appName}.log</file>
        <!-- 按天滚动 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志根目录 / 程序名-日期.log -->
            <fileNamePattern>${LOG_HOME}/${appName}-%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 365天 -->
            <MaxHistory>365</MaxHistory>
        </rollingPolicy>
        
        <!-- 日志输出格式： -->     
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] - [%-5level] [%logger{50}:%L] - %msg%n</pattern>
        </layout>
    </appender>

	<!-- 打印程序的日志 -->
    <logger name="com.etc.order" level="trace" />
    <!-- Spring的日志 -->
    <logger name="org.springframework" level="debug" additivity="false"></logger>

    <root level="info" >
        <appender-ref ref="Console" level="info" />
        <appender-ref ref="RollingFile_Appender" />
    </root>
</configuration> 