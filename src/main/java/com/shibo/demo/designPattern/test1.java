package com.shibo.demo.designPattern;

/**
 * 1.开闭原则(对扩展开放，对修改关闭，鼓励使用接口和抽象类)
 * 2.里氏替换原则(任何基类可以出现的地方，子类一定可以出现，对实现抽象化的具体步骤的规范)
 * 3.依赖倒转原则(面向接口而不是依赖于具体)
 * 4.接口隔离原则(多个接口优于单个几口，降低类之间的耦合度)
 * 5.最少知道原则（一个实体类应当尽可能少的与其它实体类之间发生作用，模块之间独立）
 * 6.合成复用原则（尽量使用合成/聚合的方式，而不是使用继承）
 */
public class test1 {
}
